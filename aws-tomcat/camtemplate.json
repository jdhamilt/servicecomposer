{
    "service": {
      "version": "1.0.0.8",
      "specVersion": "v3",
      "catalog_metadata": {
        "name": "ServiceNow to AWS Example",
        "description": "",
        "image": "serviceicon_1.svg",
        "category": "Application Services",
        "bullets": [],
        "providerDisplayName": "IBM",
        "longDescription": "",
        "documentationUrl": "",
        "supportUrl": "",
        "bindable": false,
        "updatable": "",
        "systemTags": true
      },
      "tags": [
        {
          "name": "environment",
          "label": "Environment",
          "type": "string",
          "immutable": false,
          "hidden": false,
          "required": true,
          "secured": false,
          "description": "Unique identifer added to the provisioned VMs.",
          "isSystemTag": true,
          "customtype": "string",
          "permission": "Read-Write",
          "options": [
            {
              "label": "Development",
              "value": "dev",
              "default": true
            },
            {
              "label": "Quality Assurance",
              "value": "qa",
              "default": false
            },
            {
              "label": "Production",
              "value": "prod",
              "default": false
            },
            {
              "label": "Test",
              "value": "test",
              "default": false
            }
          ]
        },
        {
          "name": "Name",
          "label": "Name",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "Name provided for the service instance by the end user at time of request",
          "isSystemTag": true,
          "customtype": "string",
          "permission": "Read-Only",
          "default": "${svc_instance.name}"
        },
        {
          "name": "request_group",
          "label": "request_group",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
          "isSystemTag": true,
          "customtype": "string",
          "permission": "Read-Only",
          "default": "${svc_instance.group}"
        },
        {
          "name": "request_user",
          "label": "request_user",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "The user id of the current user that requested the provisioning of the template.",
          "isSystemTag": true,
          "customtype": "string",
          "permission": "Read-Only",
          "default": "${svc_instance.owner}"
        },
        {
          "name": "service_name",
          "label": "service_name",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "Name provided for the service instance by the end user at time of request",
          "isSystemTag": true,
          "customtype": "string",
          "permission": "Read-Only",
          "default": "${svc_instance.name}"
        },
        {
          "name": "service_identifier",
          "label": "service_identifier",
          "type": "string",
          "immutable": true,
          "hidden": false,
          "required": false,
          "secured": false,
          "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
          "isSystemTag": true,
          "customtype": "string",
          "permission": "Read-Only",
          "default": "${svc_instance.service_instance_id}"
        }
      ],
      "upgrade_from": [],
      "downgrade_to": [],
      "actions": [
        {
          "type": "provision",
          "name": "Provision",
          "description": "Default action for deployment of service",
          "input_parameters": [
            {
              "name": "install_tomcat",
              "label": "tomcat",
              "customtype": "string",
              "type": "string",
              "immutable": false,
              "hidden": false,
              "required": true,
              "secured": false,
              "description": "Select True to install Tomcat. False will create a base Linux Virtual Machine with no middleware installed.",
              "view": "create new",
              "editable": true,
              "options": [
                {
                  "label": "True",
                  "value": "true",
                  "default": true
                },
                {
                  "label": "False",
                  "value": "false",
                  "default": false
                }
              ],
              "passbyname": false,
              "dynamicDetails": {},
              "isDynamic": false
            },
            {
              "name": "aws_vpc",
              "label": "Virtual Private Cloud (VPC)",
              "customtype": "string",
              "type": "string",
              "immutable": false,
              "hidden": false,
              "required": true,
              "secured": false,
              "description": "Name of the Virtual Private Cloud (VPC) this resource is going to be deployed into",
              "view": "create new",
              "editable": true,
              "passbyname": false,
              "dynamicDetails": {},
              "isDynamic": false
            },
            {
              "name": "aws_subnet",
              "label": "AWS Subnet Name",
              "customtype": "string",
              "type": "string",
              "immutable": false,
              "hidden": false,
              "required": true,
              "secured": false,
              "description": "AWS Subnet Name within the VPC",
              "view": "create new",
              "editable": true,
              "passbyname": false,
              "dynamicDetails": {},
              "isDynamic": false
            },
            {
              "name": "public_ssh_key_name",
              "label": "Public SSH Key Name",
              "customtype": "string",
              "type": "string",
              "immutable": false,
              "hidden": false,
              "required": true,
              "secured": false,
              "description": "Name of the public SSH key used to connect to the virtual guest",
              "view": "create new",
              "editable": true
            },
            {
              "name": "public_ssh_key",
              "label": "Public SSH Key",
              "customtype": "string",
              "type": "string",
              "immutable": false,
              "hidden": false,
              "required": true,
              "secured": false,
              "description": "Public SSH key used to connect to the virtual guest",
              "view": "create new",
              "editable": true
            },
            {
              "name": "aws_region",
              "label": "AWS Region Name",
              "customtype": "string",
              "type": "string",
              "immutable": false,
              "hidden": false,
              "required": false,
              "secured": false,
              "description": "AWS Region Name",
              "view": "create new",
              "editable": true,
              "options": [
                {
                  "label": "US East (N. Virginia)",
                  "value": "us-east-1",
                  "default": false
                },
                {
                  "label": "US East (Ohio)",
                  "value": "us-east-2",
                  "default": false
                },
                {
                  "label": "US West (N. California)",
                  "value": "us-west-1",
                  "default": false
                },
                {
                  "label": "US West (Oregon)",
                  "value": "us-west-2",
                  "default": false
                },
                {
                  "label": "US GovCloud Region",
                  "value": "us-gov-west-1",
                  "default": false
                },
                {
                  "label": "Canada (Central)",
                  "value": "ca-central-1",
                  "default": false
                },
                {
                  "label": "EU (Ireland)",
                  "value": "eu-west-1",
                  "default": false
                },
                {
                  "label": "EU (Frankfurt)",
                  "value": "eu-central-1",
                  "default": false
                },
                {
                  "label": "EU (London)",
                  "value": "eu-west-2",
                  "default": true
                },
                {
                  "label": "Asia Pacific (Tokyo)",
                  "value": "ap-northeast-1",
                  "default": false
                },
                {
                  "label": "Asia Pacific (Seoul)",
                  "value": "ap-northeast-2",
                  "default": false
                },
                {
                  "label": "Asia Pacific (Singapore)",
                  "value": "ap-southeast-1",
                  "default": false
                },
                {
                  "label": "Asia Pacific (Sydney)",
                  "value": "ap-southeast-2",
                  "default": false
                },
                {
                  "label": "Asia Pacific (Mumbai)",
                  "value": "ap-south-1",
                  "default": false
                },
                {
                  "label": "South America (São Paulo)",
                  "value": "sa-east-1",
                  "default": false
                }
              ]
            }
          ],
          "flow": {
            "conditions": [
              {
                "decision": {
                  "title": "decision_ea0086",
                  "options": [
                    {
                      "case": "true",
                      "sequence": {
                        "0": "awsec2wid648b831"
                      }
                    },
                    {
                      "case": "false",
                      "sequence": {
                        "0": "amazonec6c1901cb"
                      }
                    }
                  ],
                  "id": "decision1326e14f",
                  "editable": true,
                  "isErrorFlow": false,
                  "mapped_parameter": "${input_parameters.install_tomcat}"
                }
              }
            ],
            "templates": [
              {
                "AWS EC2 with Apache Tomcat": {
                  "title": "AWS EC2 with Apache Tomcat_a7fd73",
                  "template_name": "AWS EC2 with Apache Tomcat",
                  "version": "v1.0.1",
                  "id": "awsec2wid648b831",
                  "template_type": "Terraform",
                  "template_content_type": "Amazon EC2",
                  "template_provider": "Amazon EC2",
                  "instance_name": "",
                  "template_data_objects": {},
                  "template_params": {
                    "aws_ami_owner_id": "099720109477",
                    "aws_image": "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*",
                    "aws_image_size": "t2.small",
                    "aws_region": "${input_parameters.aws_region}",
                    "public_ssh_key": "${input_parameters.public_ssh_key}",
                    "public_ssh_key_name": "${input_parameters.public_ssh_key_name}",
                    "subnet_name": "${input_parameters.aws_subnet}",
                    "vpc_name_tag": "${input_parameters.aws_vpc}"
                  },
                  "outputs": [
                    "ip_address"
                  ],
                  "editable": true,
                  "cloud_connection_names": [
                    {
                      "provider": "Amazon EC2",
                      "connection_name": "Luca_AWS_DO_NOT_USE"
                    }
                  ],
                  "provider_engine_version": "0.11.11"
                }
              },
              {
                "Amazon EC2 Virtual Server with SSH key a1185d": {
                  "title": "Amazon EC2 Virtual Server with SSH key a1185d_82f763",
                  "template_name": "Amazon EC2 Virtual Server with SSH key a1185d",
                  "version": "2.4",
                  "id": "amazonec6c1901cb",
                  "template_type": "Terraform",
                  "template_content_type": "Amazon EC2",
                  "template_provider": "Amazon EC2",
                  "instance_name": "",
                  "template_data_objects": {},
                  "template_params": {
                    "aws_region": "${input_parameters.aws_region}",
                    "aws_image": "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*",
                    "aws_image_size": "t2.small",
                    "aws_ami_owner_id": "099720109477",
                    "vpc_name_tag": "${input_parameters.aws_vpc}",
                    "subnet_name": "${input_parameters.aws_subnet}",
                    "public_ssh_key_name": "${input_parameters.public_ssh_key_name}",
                    "public_ssh_key": "${input_parameters.public_ssh_key}"
                  },
                  "outputs": [
                    "ip_address"
                  ],
                  "editable": true,
                  "cloud_connection_names": [
                    {
                      "provider": "Amazon EC2",
                      "connection_name": "Luca_AWS_DO_NOT_USE"
                    }
                  ],
                  "provider_engine_version": "0.11.11"
                }
              }
            ],
            "resthooks": [],
            "notifications": [],
            "sequence": {
              "0": "decision1326e14f"
            },
            "error_sequence": {}
          },
          "output_parameters": []
        }
      ],
      "plans": [
        {
          "name": "Standard",
          "description": "To deploy a Standard plan",
          "actions": [],
          "plan_parameters": []
        }
      ]
    }
  }